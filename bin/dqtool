#!/usr/bin/env python

import sys
import os
import optparse

current = os.path.dirname(os.path.abspath(__file__))
parent = os.path.dirname(current)
sys.path.append(parent)


from iatidq.models import *
import iatidq.dqsurveys
import iatidq.dqorganisations
import iatidq.dqpackages
import iatidq.dqregistry
import iatidq.dqdownload

def clear_survey(options):
    organisation_code = options.organisation_code
    assert organisation_code

    iatidq.dqsurveys.deleteSurveyData(organisation_code)

def get_package_names(organisation_code):
    for p in iatidq.dqorganisations.organisationPackages(
        organisation_code=organisation_code):
        yield p.Package.package_name

def list_packages(options):
    organisation_code = options.organisation_code
    assert organisation_code

    for p in get_package_names(organisation_code):
        print p

def reload_packages(options):
    organisation_code = options.organisation_code
    assert organisation_code

    for p in get_package_names(organisation_code):
        iatidq.dqregistry.refresh_package_by_name(p)
        iatidq.dqregistry.activate_packages([(p, True)], clear_revision_id=True)
        iatidq.dqdownload.run(package_name=p)


def run():
    parser = optparse.OptionParser()
    parser.add_option("--mode", dest="mode",
                      action="store")
    parser.add_option("--organisation", dest="organisation_code",
                      action="store")

    options, rest = parser.parse_args()

    if not options.mode:
        print "Must specify a mode"
        sys.exit(1)
    
    modes = {
        "clear-survey": clear_survey,
        "list-packages": list_packages,
        "reload-packages": reload_packages
        }

    if options.mode not in modes:
        print "Mode must be one of:"
        for mode in modes:
            print "  ", mode

    modes[options.mode](options)

if __name__ == '__main__':
    run()
